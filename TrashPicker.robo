<head><version>2.61.21</version></head>
<image>
<filename></filename>
<size>45130</size>
<data:1>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</data:1>
<data:2>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</data:2>
<data:3>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</data:3>
<data:4>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</data:4>
<data:5>eP8Awp4flAjIWRZWt/EDkkbx5YYIFZ2kP09rV7p2qWcs1wEWa2nkuIG81XeSaSVj50m6IvvMhy3lg4GAHJjeQ/LF/wDC/wCLoi0eO1k+Cskem+LfDnit5G8WePUn1Z/Durwa5Z6bHG/w/ljtFm1LSYHM4MgiRCVil3qtdzDpHxfthsPwy8CahEoR5U0/4sapGqsNzl44dU+HHh5HLsd6fOrDJBZTI7nVxc6NJJtzpTlLli4yaulyznyylyOMlZSWm8ejZkqnvTlaqoqEYr93LdSk29LvRSVm/wAXzHpGp6ruNtHIQv8AZvkgz28jzTXhIWNormBUjjzIZd6rJvLqDLEG8ua8PL6leWanDxm/Dl2ghn8ncioTHIwV45beOXJEbKFEgZQNwLZbnFsvi497I/8AwpzR7MtHlxa/FDw7drActKlwx1K08O4P7lkEU6ht3zb4089BzEuhfE8TzSN8E/EDyFpit7pXj/4WXQmdiVUtBeeOPD14zogCJ5YDAlHhZg0CVVWOIalGKqTk9VBactny2u5Rio2s24d3z3bLdaNo3c4xlspRnF6aa3irX8++p1T60LMqlmQkYiUCacieR/vAxKgWOMqUIhbIyCA2XLGWr+m219rKSyQfftljMbyxPHHYjcFAM8KSyyKVTC+SGOST5f8AyyrgU1PxDobINR+D3xAnmgWUzQLqXw2v0ZlBeJ1is/iLNdFhGRM0rAk8sFbLA42r/E3WNJtklv8A4e/FDQ9HvNQtNKshH4dhuEub/Vb1LKw05JNH1fxC8099qF4ml2scjMZbiWG1tvNeWCM+fKjUTUeWbaaTbTUYrmtommpuUYW5bP1WjEqibspWm9EnzLT1cUunf8GegPrFvHfT20cw1C4cBAIYWURtFuWVEBCkxsYwQI8RBj5gDZuI6pXiPMUk8orI+WeFNpEUYQoJWRd+3P3CqZHJYhSzivNbnx9BprN9v+HPxohMeQjp8H/iBfqSw3lTJoeg+IAyESCPcxwNrsxcq9Ydz8b9D06IPc2vjiylCSLHHqvwq+JmmoiBsBbgah4TtDbAyDarFuSwcHEokNVcE6qi6lGo41LxhONOUVV933uXRydtNfPRt+8L6xSd/wB5C0XquZaer0SbWm/q9Jnodtpl0Tco6vvllkMDBAQY1JzuEKxxqqrjmXDcLveST5zuLYy2VtLcZH2Z5FiuCjxh7XZhdxUusiM0wA643MGdsCZj4HN+0PoRt3U397BMjNcob/RvENiIGG/exiv9O0eRsBfNZpA3y8yghilZF1+0d4cv7eKzXxz4ds5Hldp0u76Gy3lhlkmS8W2lP7lCANvC5dzHgOeeGR2rPlUlKnC8tGqkU7JykpXdk4XUraN8qb+Ica9JuTVaikvck+eKV3fRu+vom7Lpsz6C0PxFY6fr2nzSGW5ghuoZ5GuXRjHBbzK73EvmNPjaU2lhwWYBn4DiL4PXyW3w9+E8O8m4m+HPgm+vFjTad+oeHNNvbgscum5rnUDudTlmO+R3b95XzkvxU8J3i67dj4g+ELi5gsNSvYUt/E2mNdPLHbzNDbWtpFfPdTSSzqIkjVWZ5GWONN0tutereD/HHg/TtG8I20PxI8KXs1r4P8P6dKtv4m0hp7KXTdLtNN+y3cMuoCWGQmxVMbTIDk/PtkkPs18FGpQhS9olKnJSatd1ElJcrUrpyldb991exj7WnDERhzpylTm4yuuVvR8qd1HRRbXNeTei0SkfQLXajYsBE1u+15YwiocqdwTdulZokcDaw5YgmQMRJXLXFimtXLkyhra1kTzGChGhiJIc7lSQlo8kxo2CQNoxksfKdZ8YPrF3Yf2D4psLaG2uD50lnqNnObtUdcQxJbz3Cy5x5arcZBLecxLIID0aa3q6SNInnozMrlYYyoJV1bc+FmUgGPqSSRuUNGdk1YYPD8saXPGpTaskoxS5rLl5rxTTV1101bk9zZ14wvJ1KcVFJpzk29Xb4YqTfk36PTnkW9S0eWyluGUCWW4j3SeYPNDGIeQspDBlDsqA7BxkHqzXMlckb+8nkltoVhlNuGRp518uWIlv3aQlSMMmwcI20EsCwG1K7C4umWO4muruSWW4KtEzuSwXOFdSOUZshykhGe4GfNPMSW80mordQCQW0z5k2oFmk8sAm2YHAJVky0gbaF3O4JWWc+lQxSU+WMXGnGThGTjJOC0alGV+ttO2zu9TnnRUkpc6nUaTk1KKTS2kuZxaXKrKzs5WSerZq6dJKAFnYSFHKklwFYD7ykJiMlCu0fMQSRtIYeYbmqatDLbzCBHeWFzALjcX2IBvbYpH+qWSMLsUgY5DEt5hqXEJdXmAJj52IFCyAuEG3jYEVTH53zZY8gYJKVFrlpEIraNLkw3F3EuyE7lUsw3ZVScSAkcM7ZDEqMMHSvRg4Rpuq5xqVaSk/ZvbW69+drt8y5ne6be6crHNePM3eK96yhK6irvRNu6Xqm76KUluUls7m7tVlaczNIsshO9QXVQG8tWYKJDGpwAFKhyRliPPr56/aSvo7Xwdp1+sSSQ6L8SfhJd3ETOzRwWw+JXhiK41a7mbCiLR2A1y6mmIjijgkuZQqwXEteuhrjSo1+13QhZblktVLGNnieREdTln8xy25CqlWCLkdbeU8F4u8HR+MtO17wfqcK6l4c8R6XeaHrcBuDH9ptb+2e2vIA8bRXEPnQXLjzEZZFZhcReQwWc1LMIONSM1GnNR9lyOLV9Gl7zSSSvdcy1T922jeroSdNytGUXFK0XdpWbvJNLo79V0350eY6npepy6/puqeHtFuNf1e4sHsJdBsbcte+J9PW5aZLHTfnVhrGmSX017pL3WLaVp7vR78W8Wq2/xAr5r+Jf7PHx7+MF94J0v4f8Awu+J8uteDIPjVqdhpn/CPXvh+xbxJ4/1K/nsLPxlrHiW30TR9DsdF0PxHL4T8R2evyW25b6900XDLPbuf6Rf2WPCng/Q/BHhW88NaVAputLtbebULrbeaxfSW4e3uv7W1S4Wa7vrg39s4uZJD5ZlDNEqBYhXs/je51C5t/s2myRLLaxs4iuWeKGeR02bZJUWUgBFIAYMGk+ZmGGkr8PzTx8ll+Ox+WYXhqU54CVbDTqY/GShN4im5Rm6dLDwmqceePuqUm7e85PSJ+b5zx/Uw2KlhKWBjT9hN0pvEzalzRag24R5lG0oO+rla7umz+Vzwr/wRu/bT1Dw1Emnaz8BPgs+o+BJfDHi/Gp3dtrfiieVhLqPh4SeBfCetaFoXhu6jiXS4xqdwjiFRLeuUuryyrM/aK8ffGn9mb4VHwh4s+E3jvwX8X7XTNK8I+DdS8QeGJ9Q8BeJtTit7Ozutf0PxhpSeJfCPiGzsbKGTWLa2upUlkc28V9aeVLqi1/QjrMXi6SWdpLR449xDNaXdnI4XJyPLjuHuEDKh4mVS3Rd2Tmi2vWt7pkvhbxnpz32jXow0WpwyJGhR0aKeKQ7xDcWzASQywFZUZhKrKRGx8HAfSKzyrio/wBo5Tl1fDwvGSpupQqUp3dpqqnOcuVPVVU03o3FPXzsLxjjqEo1Iww9WlOfNOjC8WlFpt05NyUXK9vPZ6pN/wAyKfFD4e+JPD2iax8Gfgp8VfEfxm+Duo2PifUfFmmeD/P1fXrudUg8UxfFDV7jVbrxHr2lePNM0+5tZp71rq4gvI4ZtAWH+xBYV9eeDf2yfEmp6Pp+tQfstfH7UNC1u1t9T0y+stI8JO+oadcQQ3NncW8Nx4r0uWaGeG8FxBJabjJEyyooIdD99ftV/soDXf8AhG/HngTxT/wh3jbwvOV0bxvZaXa6hd/2XcSQjVPCPjTTjJpVt4z8N6vbwIJLbU5Fu7S9is9b026gktLxD+d3ifxT42sJtM/Z5+ApsJfE/g3w/pth46+JGv2Iu/DHwP027gCaeG00P9m8S/EDWLGM6j4c8JxSC1tbX7PqviaRLH91X73wdxngOKsJ9Yw0HRrU2qdfD1JxbjOaVqlOcXapCTdlpzJpqS0ifZ5FnazmnVdKtLDSpNKdNqnNwb2SUlGb2s1O7TSfM27HvXhb4s+H/i5bXTxeFvFPg3VvD0sGlaz4c8e6fHpOvaPdTW8F/bm5trG+1uyMF5Z6gl3ayWk8gKErKIXWWzOpLomi/wDLVFZsq2TcurFhjI2l3bn7ny45wa86+GPwnsfhBpI8LaTp/irxbdanqFzr+u+OdT1HTdR1nxx4k1ARHU9V8SzapqGhTHVZHgCMIVS2itFhtNOjRLWytq6u8uriKYwXeg6xZbGKiR7SK7V5AxCoDotz4iy7EFV3YRiG2NIqm5r9q4dzfK8NgcJSxGJwkK69pKca12o3neN5OHKuaMlK13FtuLsfpGU4rDxw9Kj7enOrFNzT3u3KSumoq6T1UG0paXsOvfCehy5DRTKkvmFSt3KUVgMjl2lCk5DBcccbgRurHHgfQpV2i+vU2cBTOcAj0dljJ3L03byOFBbDNUMniS2UyBxPaGIsDHqdrd2EilAcl4tQg090RlQuHxsbgAuWMhS38XaHeSrHDrWlvPKNxghvreV2bJVgFjkmLHfg8Z6+tfQUsfl2LjHkeBk/ejyxqUryknZxfLUalZx3Seje15I9OFSLs1y396yvFuTv2vJPZL5eZ23w18KaFofiTTb8/bJmFxBbxKJlf9/cSqY3j+UFVDRCNzGy/IzJIsvzCuB+BKwH4e/DmEILi6XwjojFNoC+WLSONw5JdfljUsHJAbBdSxZpD13gHVjqHiWE2Ze40zR7y1tp5Y2j8m51Z7hW8mKVgJJG0m3j8q4EBMay3It5i89rPb1wvwXuVi8H+BIhbBoB4cs4HkbLEJEslvIUVMF3/dKuYgRlgQin91X5xxpicPLHf7O4044WMKVSVNKUJzUpOT0lefLGpyyau1JPe3OfM51UhUxSUJR5qdPkaXdNykktE7Rabeml7tNNv0NrXZJctIfKLNh0DyeXjcVAwCBjK8EZOcnI3vLVG6spLlW2SiKEqUZZlXazIxVDnnLFAQpYH5VXoRJV67ntHmErK1rYq8MQKMVZJdqqFmA8+P53lBJdsBiRIA3mW9Nsra4uVmxbsjiZgpDu0cUakKGJP3mKMJfk4JIUbv8AWH5yi4uc5aTnJpOpCNlFdIt3bduSzs9NLrU8y8Ytxly82ibT2v3tza91e97Lcz7qyke7imiZERFCOpPAVFAJjBEgBmCbn2+hztDyIJIre1uV8wg7m3oNjFFCoGU+YU8zLFypDZ34yrElpK2byxjtnkdWySi7ShYlW4G12YA8hNx5wD8xPz4rKjkhdmtY5hHIsckrZYgff6iQnAYbsbeg+XGd0xPRLVWaTitGmrvyWra32TS01vdJle0X86/8CX+Z+kaaM2v3Ml3rD3DaXb7Rb7nMaSbvOV/JBP7wISoBOSwOYk5MdanhS3jR9ThhQzWarHEkxcqypIz7JnyroXt4k8tFzwrsMcuDWbXb2a3W1WJGhUB083aRsiIb5tvlK+Tk+WT1BI+ZpCei0zU45YLpo4Yzej7MjKWCrcOS+WhUYIICkKCcYGzguGr5OphFzxm2pSTu5rdvm5Y6rSMYtWbXVay1kz1Kc41Vzx5rXcbuyc7NpNK94rylZ/adr8zydfsdO0e1liud95AW86GHYMxtLKQDbyDEh/dosKkE7j5pUYH2kXNJtLZEF1JEtveKg2yOzhLUJ8haNN6rJIqyC3jMuG3YYM7G6Y5PiFit7H588bPBEWto5kO2Bo/3i+YXSJOBLvDKOHUeXhmElMjvZ0s5J7+dTEJ0Cp5imeV1UAlUiUBlzCBljkjC7TunmrlkqVOU4ex5oJp2cJJbNNczu581+uu8bPRg2ldWur9tbXbtfTe+79OtzelvkltlhtkjNzZhneNeEcOWZZY3d5nDAIVYBiHBZiCQ8lJp3ja7u0SK8tXWIM0EqKYlaQLhY0CKrOfJUZk+bJBBYRkuwzfJCmG8WQW4uLdhJbqJGIjVm8liBlo5dsx8wLkqS0K5AknNRb1fOnKtADZoqDepjALquWkkdkDMqQ/OMZ6eZ5jASklSjzRlJSj76SaiknG90uSzvZuzvd9NW3cdrptNXejs152tby18zpHceXPcLvgDsIUcOR5eV2bsP55DLHKd+4EEHAyweQ8tq3iW3tI5YYLlpJ7O2ae3K7QwYTFGaMO1u04CFMbt7qw2xEKio2NqmtMbSSJnRpGnMjP5pTzduWRFGAsqJx82W7uAMyPXlur+JVFzcXFtNafa54UAOws0UWGU7UOWUCSAyM0W0u21yZCyTVpWU5+zai5RhKUp8qm48qbim+Tylpeya3TdkE5axUn7zTaUtLrRabX1ta2rNfxFrL6lKxuJ2t5EgSCG4klZjcCPe6JMkSCZ1Jt9koIJjAjknYLLFJXlGt+LLyW+8GQm6W5gj+KHg2+ZomVoml8P3Z8aRqC3CgweCS0hcMQEITDAQHqtG1hljuYpI7SZrp915LL5qqYEBiVBkSuCy3JU7+CCBExZth8n1Hy7vxR8O9OSA2sNx421bU3DuyySRaZ8PPHKvEqBYySrausik/M0saRASEw25dDCQU6c6lScpJRfK3Lli4+7ZcySabl719G7bWSeNWo1GahzOaahdJu8t3a3M04x1u9k00aM+pXmo3VxJJc3kYMcygM7O8tyM+WY3URvIqbjMxj5K5JBKBTonw9cxW9m1xqM6yzK86SebKqMFVQCryyIQZhLhlwdpYRMDhcx39sS1zJBBbpapiKMz7EVAx3mQrKzlpE8jYWjJJY+Xk5bNQrOVihivPtFrbwhw6PJ5ZLvuDuxZgUjRc723FicAcLnaUVGU4ylKLbtLSTdraJWtKyukpOz2TaWpqpuUYta8ybelrpaSV224tNppS13i2mrvWS5u0a1W3v7q2DOWka01CXdvijySzx5iH+rETEDbgncwIRDK3irxNbPIqeJNYMNvII2gW/uEjdHJwJA9x5Shgo3FWByMDmufGLe5EsszKGifaCxaNgSRKxIKrhgfm3ENkkbiDIrMVrTaInkSBV/eIkbSAtkl2d9iyKpKMW3EDgbf42carFKMEoxqRklGLcHNKbT0lLmlzL3WtE7K7u1e5z1qM3L2klGqo3ajOLbSu2lDmTi2npHm066MsTeMtc1O5FsupXNzJLcH9xc3ImjRgHw0byNLDGobbI5U4wQvJq3dIdMurebWxpN/JMWMlrNp2lXsixkKd5lvrW9RSSA4UDcwJ+ZdgkONFcxxzXB0+9igTyI3+0KHaTzg7BniYJ5oaTftkeA5QfPtOEQUbkJeuvm3pcrt+QrJ5pd32CTJMckgVyu8KpDZUSBiFI1rYupKEaUqtZ0oyb9m+eUOsW5U5KUXe9m2lLZ3Vk3EcHBazipT05Yydm7ptKXuyfMlsu92m7XH3+k+G9WLGX4dfDO582c+XNqPw98F3MxRt7CN5rrRL478AQ+ZCgZsL5jqFnuzStPAXgy9mjhuvhV8OILVJJVN3ZeDPDNjDbAKCEZ7LTrS5gMhiEhEODuLMGY7VNlBHYRTkxJeQuEglmuC4AfkyrbGEWflSOk6uqTkqBgk5kkuj1ekzwhY5o7WVY0VIxHdxhySSEaRkklQg4lQhkDMCokVkDmWtaVSrOrBqXtZRioQXLzSha1nByg1CS2um0tU3Z2MVTw3snJ4ZcrcVJqMeaTcrPmXLFva17NPpLdmZZfDnwApuEk+HWjPbGNpY2shf6egRUjk8vztM1LSQgZSFZV2naQDhY0zm+Ivh/4Y0HSte1HSfCureH5l0TULu1u9M+IXxNhlsPL06a4S5WD/hLxZW7xOiyCNIpEVkVQGUSWtd6l5ZwxTedeMl9sACJNI0fkqSZdsG2MbyvygO2D3AwEMHjbxHa6p8PvHc5mSK8sPBvikxrKIl3rb6LfgSBQ0hLRlAqtIDIGBkKgiJq6arUKkeWlCMq0oxm6nKlPmklolG6+K8nDRXaTes3iqFKpqoJOEZTipRm0lFptPlUWnrq2mm21fRs8btvD1lHpHhKR9a+J5vrrw9oN3e3Q+KXjt3m1G90e1nv5BDdeIL2wAa/vpJxCFWFcCJI/LSK3q9J4Ut9RW5aDxV8YbOfTcIJ7P4gJJKUQiLEw1vRPG0cwDSBwW3kE4zKDIR0N9oj2b2YkZIjDaWcEGQSFWCCKNZHjVVWRY0gBXAVtpCyK</data:5>
<data:6>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</data:6>
<data:7>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</data:7>
<data:8>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</data:8>
</image>
<Button_Interface>
  <1_clear_on_release>TRUE</1_clear_on_release>
  <1_color>#00FF00</1_color>
  <1_height>46</1_height>
  <1_is_bold>TRUE</1_is_bold>
  <1_is_selected>TRUE</1_is_selected>
  <1_is_toggle>TRUE</1_is_toggle>
  <1_name>Start</1_name>
  <1_text_color>#000000</1_text_color>
  <1_variable_name>INTERFACE_RUN</1_variable_name>
  <1_variable_value>1</1_variable_value>
  <1_width>90</1_width>
  <1_x_position>29</1_x_position>
  <1_y_position>47</1_y_position>
  <2_clear_on_release>TRUE</2_clear_on_release>
  <2_color>#FFFF00</2_color>
  <2_height>46</2_height>
  <2_is_bold>TRUE</2_is_bold>
  <2_is_toggle>FALSE</2_is_toggle>
  <2_name>Reset</2_name>
  <2_text_color>#000000</2_text_color>
  <2_variable_name>INTERFACE_RESET</2_variable_name>
  <2_variable_value>1</2_variable_value>
  <2_width>90</2_width>
  <2_x_position>126</2_x_position>
  <2_y_position>47</2_y_position>
  <3_clear_on_release>TRUE</3_clear_on_release>
  <3_color>#FF0000</3_color>
  <3_height>46</3_height>
  <3_is_bold>TRUE</3_is_bold>
  <3_is_toggle>FALSE</3_is_toggle>
  <3_name>Stop</3_name>
  <3_text_color>#FFFFFF</3_text_color>
  <3_variable_name>INTERFACE_STOP</3_variable_name>
  <3_variable_value>1</3_variable_value>
  <3_width>90</3_width>
  <3_x_position>224</3_x_position>
  <3_y_position>47</3_y_position>
  <4_clear_on_release>TRUE</4_clear_on_release>
  <4_color>#EBE9ED</4_color>
  <4_height>23</4_height>
  <4_is_bold>TRUE</4_is_bold>
  <4_is_toggle>FALSE</4_is_toggle>
  <4_name>Peter Carr</4_name>
  <4_text_color>#000000</4_text_color>
  <4_width>76</4_width>
  <4_x_position>39</4_x_position>
  <4_y_position>99</4_y_position>
  <5_clear_on_release>TRUE</5_clear_on_release>
  <5_color>#EBE9ED</5_color>
  <5_height>23</5_height>
  <5_is_bold>TRUE</5_is_bold>
  <5_is_toggle>FALSE</5_is_toggle>
  <5_name>Zach Moriarty</5_name>
  <5_text_color>#000000</5_text_color>
  <5_width>97</5_width>
  <5_x_position>118</5_x_position>
  <5_y_position>99</5_y_position>
  <6_clear_on_release>TRUE</6_clear_on_release>
  <6_color>#EBE9ED</6_color>
  <6_height>23</6_height>
  <6_is_bold>TRUE</6_is_bold>
  <6_is_toggle>FALSE</6_is_toggle>
  <6_name>Marvin Celestin</6_name>
  <6_text_color>#000000</6_text_color>
  <6_width>111</6_width>
  <6_x_position>218</6_x_position>
  <6_y_position>99</6_y_position>
  <7_clear_on_release>TRUE</7_clear_on_release>
  <7_color>#EBE9ED</7_color>
  <7_height>23</7_height>
  <7_is_bold>TRUE</7_is_bold>
  <7_is_toggle>FALSE</7_is_toggle>
  <7_name>NXT TRASHPICKER</7_name>
  <7_text_color>#000000</7_text_color>
  <7_width>138</7_width>
  <7_x_position>99</7_x_position>
  <7_y_position>14</7_y_position>
  <8_clear_on_release>TRUE</8_clear_on_release>
  <8_color>#EBE9ED</8_color>
  <8_height>23</8_height>
  <8_is_bold>TRUE</8_is_bold>
  <8_is_toggle>FALSE</8_is_toggle>
  <8_text_color>#000000</8_text_color>
  <8_width>75</8_width>
  <8_x_position>165</8_x_position>
  <8_y_position>18</8_y_position>
  <9_clear_on_release>TRUE</9_clear_on_release>
  <9_color>#EBE9ED</9_color>
  <9_height>23</9_height>
  <9_is_bold>TRUE</9_is_bold>
  <9_is_toggle>FALSE</9_is_toggle>
  <9_text_color>#000000</9_text_color>
  <9_width>75</9_width>
  <9_x_position>10</9_x_position>
  <9_y_position>10</9_y_position>
  <10_clear_on_release>TRUE</10_clear_on_release>
  <10_color>#EBE9ED</10_color>
  <10_height>23</10_height>
  <10_is_bold>TRUE</10_is_bold>
  <10_is_toggle>FALSE</10_is_toggle>
  <10_text_color>#000000</10_text_color>
  <10_width>75</10_width>
  <10_x_position>10</10_x_position>
  <10_y_position>10</10_y_position>
  <11_clear_on_release>TRUE</11_clear_on_release>
  <11_color>#EBE9ED</11_color>
  <11_height>23</11_height>
  <11_is_bold>TRUE</11_is_bold>
  <11_is_toggle>FALSE</11_is_toggle>
  <11_text_color>#000000</11_text_color>
  <11_width>75</11_width>
  <11_x_position>10</11_x_position>
  <11_y_position>10</11_y_position>
  <12_clear_on_release>TRUE</12_clear_on_release>
  <12_color>#EBE9ED</12_color>
  <12_height>23</12_height>
  <12_is_bold>TRUE</12_is_bold>
  <12_is_toggle>FALSE</12_is_toggle>
  <12_text_color>#000000</12_text_color>
  <12_width>75</12_width>
  <12_x_position>10</12_x_position>
  <12_y_position>10</12_y_position>
  <13_clear_on_release>TRUE</13_clear_on_release>
  <13_color>#EBE9ED</13_color>
  <13_height>23</13_height>
  <13_is_bold>TRUE</13_is_bold>
  <13_is_toggle>FALSE</13_is_toggle>
  <13_text_color>#000000</13_text_color>
  <13_width>75</13_width>
  <13_x_position>10</13_x_position>
  <13_y_position>10</13_y_position>
  <14_clear_on_release>TRUE</14_clear_on_release>
  <14_color>#EBE9ED</14_color>
  <14_height>23</14_height>
  <14_is_bold>TRUE</14_is_bold>
  <14_is_toggle>FALSE</14_is_toggle>
  <14_text_color>#000000</14_text_color>
  <14_width>75</14_width>
  <14_x_position>10</14_x_position>
  <14_y_position>10</14_y_position>
  <15_clear_on_release>TRUE</15_clear_on_release>
  <15_color>#EBE9ED</15_color>
  <15_height>23</15_height>
  <15_is_bold>TRUE</15_is_bold>
  <15_is_toggle>FALSE</15_is_toggle>
  <15_text_color>#000000</15_text_color>
  <15_width>75</15_width>
  <15_x_position>10</15_x_position>
  <15_y_position>10</15_y_position>
  <16_clear_on_release>TRUE</16_clear_on_release>
  <16_color>#EBE9ED</16_color>
  <16_height>23</16_height>
  <16_is_bold>TRUE</16_is_bold>
  <16_is_toggle>FALSE</16_is_toggle>
  <16_text_color>#000000</16_text_color>
  <16_width>75</16_width>
  <16_x_position>10</16_x_position>
  <16_y_position>10</16_y_position>
  <dialog_height>209</dialog_height>
  <dialog_width>347</dialog_width>
  <dialog_x>185</dialog_x>
  <dialog_y>127</dialog_y>
  <show_on_load>TRUE</show_on_load>
</Button_Interface>
<Call>
  <comment>Identifies the largest green blob as the robot. Sets coordinates and orientation </comment>
  <name>Find_Robot</name>
  <use_image>Source</use_image>
</Call>
<If_Statement>
  <comment>The interface_reset flag can be set by pressing RESET on the gui OR when a piece of trash has been brought to the destination.</comment>
  <comparison_1>1</comparison_1>
  <comparison_2>-1</comparison_2>
  <comparison_3>-1</comparison_3>
  <comparison_4>-1</comparison_4>
  <comparison_type_1>3</comparison_type_1>
  <comparison_type_2>-1</comparison_type_2>
  <comparison_type_3>-1</comparison_type_3>
  <comparison_type_4>-1</comparison_type_4>
  <has_else>FALSE</has_else>
  <is_latch>FALSE</is_latch>
  <join_1>-1</join_1>
  <join_2>-1</join_2>
  <join_3>-1</join_3>
  <value_1>1</value_1>
  <variable_1>interface_reset</variable_1>
</If_Statement>
<Call>
  <comment>Called once per path planned (CURRENT MAIN TRASH GOAL)</comment>
  <name>Find_Trash</name>
  <use_image>Source</use_image>
</Call>
<Call>
  <comment>Called once per planned path (CURRENT MAIN RECEPTICLE GOAL)</comment>
  <name>Find_Recepticle</name>
  <use_image>Source</use_image>
</Call>
<end_if/>
<Marker>
  <comment>Reset input to the image with the non-targetted trash marked as blue (Blue is to be flagged as obstacles later)</comment>
  <include_graphics>0</include_graphics>
  <name/>
  <revert_to>source_OtherTrashMarked</revert_to>
</Marker>
<Math>
  <comment>Replace all non targeted trash with blue blobs</comment>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>15</function>
  <image1>Source</image1>
  <image2>Current</image2>
</Math>
<Call>
  <comment>Overlays a large black blob on top of any percieved obstacle.</comment>
  <name>Mark_Obstacles</name>
  <use_image>Source</use_image>
</Call>
<Comment>
  <module_comment>XXXXXXXXXXXX IMPORTANT: CHANGE VBSCRIPT TO LOAD FROM PROPER DIRECTORY XXXXXXXXXXXXXX</module_comment>
</Comment>
<VBScript_Program>
  <filename>.\TrashBotScript.vbs</filename>
  <script>
' define some constants to use for speed. Note that the boe-bot
' moves forward with left and right being opposite numbers (due
' to the flipping of the servos as part of the robot construction)
left_speed = 210
right_speed = 210
claw_speed = 180
rev_claw_speed = 60
rev_left_speed = 40
rev_right_speed = 40
stopped = 128


' this is the orientation produced by the path_planning and the
' orientation we want the robot to be at
desiredOrientation = GetVariable("plan_orientation")

' but first check to see if we are running or have completed all waypoints.
' When all waypoints have been visited the plan_orientation becomes -1.
if GetVariable("interface_run") &lt;&gt; "1" or desiredOrientation = "-1" then

  SetVariable "left_motor", stopped
  SetVariable "right_motor", stopped

else

' get the current robot orientation
robotOrientation = GetVariable("robot_orientation")

trashX = GetVariable("trash_x")
trashY = GetVariable("trash_y")
robotX = GetVariable("robot_x")
robotY= GetVariable("robot_y")
destinationX = GetVariable("destination_x")
destinationY= GetVariable("destination_y")

' reduce the precision of each of the orientations to
' 20 degree increments otherwise the robot (not being 
' perfect in its movements) will spend all its time aligning
' to a degree that it cannot achieve.
robotOrientation = CInt((robotOrientation / 20) ) * 20
desiredOrientation = CInt((desiredOrientation / 20) ) * 20

' calculate the different between the two angles
diff = abs(desiredOrientation - robotOrientation )

' if they are the same (within 20 degrees) just
' move forward
if desiredOrientation = robotOrientation then

  SetVariable "left_motor", left_speed
  SetVariable "right_motor", right_speed

' otherwise turn in the appropriate direction. Note the use of
' 180 testing to determine which turn direction would be fastest.
' This allows the robot to turn in the most efficient direction
elseif desiredOrientation &gt; robotOrientation and diff &lt; 180 or _
  desiredOrientation &lt; robotOrientation and diff &gt;= 180 then

  SetVariable "left_motor", rev_left_speed
  SetVariable "right_motor", right_speed

else

  ' if we don't turn one way then default to the other
  SetVariable "left_motor", left_speed
  SetVariable "right_motor", rev_right_speed

end if

end if 


claw_time = 2
has_trash = getVariable("has_trash")
if robotX &gt; (trashX-35) and robotX &lt; (trashX+35) and robotY &gt; (trashY-35) and robotY &lt; (trashY+35) then
  if has_trash = 0 then
	SetVariable "claw_motor", claw_speed
	SetTimedVariable "has_trash", 1, claw_time	
  elseif has_trash = 1 then
    SetVariable "claw_motor", stopped
  end if
end if
 if robotX &gt; (destinationX-5) and robotX &lt; (destinationX+5) and robotY &gt; (destinationY-5) and robotY &lt; (destinationY+5)  then
  if has_trash = 1 then
	SetVariable "claw_motor", rev_claw_speed
	SetTimedVariable "has_trash", 0, claw_time
  end if
  'code for backing up and starting new search would go around here somewhere

end if

' interface_pause

' variables left_motor right_motor and claw_motor now contain the motor
' movements.













</script>
  <source_mode>file</source_mode>
</VBScript_Program>
<Comment>
  <module_comment>XXXXXXXXXXXX IMPORTANT: CHANGE VBSCRIPT TO LOAD FROM PROPER DIRECTORY XXXXXXXXXXXXXX</module_comment>
</Comment>
<Math>
  <comment>I think when we actually ran this with the live robot we used an ADD operator instead of AND, but with my test image the ADD operator did not work</comment>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>4</function>
  <image1>Current</image1>
  <image2>Source</image2>
</Math>
<Path_Planning>
  <comment>Plans path based while avoiding any black space (obstacles) in image</comment>
  <destination_x>[destination_x]</destination_x>
  <destination_y>[destination_y]</destination_y>
  <plot_along_non_zero_pixels>1</plot_along_non_zero_pixels>
  <plot_greedy_waypoint_path>1</plot_greedy_waypoint_path>
  <reset_trigger_variable>interface_reset</reset_trigger_variable>
  <reset_waypoints_on_destination>FALSE</reset_waypoints_on_destination>
  <robot_color>2</robot_color>
  <robot_x>[robot_x]</robot_x>
  <robot_y>[robot_y]</robot_y>
  <route_color>4</route_color>
  <visited_waypoint_color>7</visited_waypoint_color>
  <waypoints>167,137,243,51,254,221,68,202</waypoints>
  <waypoints_variable>waypoints</waypoints_variable>
  <waypoint_color>3</waypoint_color>
  <waypoint_removal_distance>15</waypoint_removal_distance>
</Path_Planning>
<Math>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>1</function>
  <image1>Current</image1>
  <image2>Source_WithObstacles</image2>
</Math>
<Math>
  <comment>This is the best step to select while running the robot. Lets you know the entire plan for the current environment.</comment>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>13</function>
  <image1>Source</image1>
  <image2>Current</image2>
  <image_1_channel>2</image_1_channel>
  <image_2_channel>2</image_2_channel>
</Math>
<VBScript_Program disabled>
  <comment>Enable this and disable other VBScript to make the robot reverse and open claw</comment>
  <filename>.\TrashBotScriptWithOA.vbs</filename>
  <script>
' define some constants to use for speed. Note that the boe-bot
' moves forward with left and right being opposite numbers (due
' to the flipping of the servos as part of the robot construction)
left_speed = 210
right_speed = 210
claw_speed = 180
rev_claw_speed = 40
rev_left_speed = 40
rev_right_speed = 40
stopped = 128

SetVariable "left_motor", rev_claw_speed
SetVariable "right_motor", rev_claw_speed
SetVariable "claw_motor", rev_claw_speed</script>
  <source_mode>gui</source_mode>
</VBScript_Program>
<Lego_NXT>
  <comment>sends all motor commands to NXT as decided by the VBScript</comment>
  <enable_battery>FALSE</enable_battery>
  <enable_motors>TRUE</enable_motors>
  <enable_rotation>FALSE</enable_rotation>
  <enable_sensors>TRUE</enable_sensors>
  <enable_servos>FALSE</enable_servos>
  <enable_sound>FALSE</enable_sound>
  <mailbox_0_mode>TRUE</mailbox_0_mode>
  <mailbox_1_mode>TRUE</mailbox_1_mode>
  <mailbox_2_mode>TRUE</mailbox_2_mode>
  <mailbox_3_mode>TRUE</mailbox_3_mode>
  <mailbox_4_mode>TRUE</mailbox_4_mode>
  <mailbox_5_mode>TRUE</mailbox_5_mode>
  <mailbox_6_mode>TRUE</mailbox_6_mode>
  <mailbox_7_mode>TRUE</mailbox_7_mode>
  <mailbox_8_mode>TRUE</mailbox_8_mode>
  <mailbox_9_mode>TRUE</mailbox_9_mode>
  <message_1_type>-1</message_1_type>
  <message_2_type>-1</message_2_type>
  <message_3_type>-1</message_3_type>
  <message_4_type>-1</message_4_type>
  <message_5_type>-1</message_5_type>
  <message_6_type>-1</message_6_type>
  <message_7_type>-1</message_7_type>
  <message_8_type>-1</message_8_type>
  <message_9_type>-1</message_9_type>
  <message_10_type>-1</message_10_type>
  <motor_A_map>right_motor</motor_A_map>
  <motor_A_max>255</motor_A_max>
  <motor_A_value>128</motor_A_value>
  <motor_B_map>left_motor</motor_B_map>
  <motor_B_max>255</motor_B_max>
  <motor_B_value>128</motor_B_value>
  <motor_C_map>claw_motor</motor_C_map>
  <motor_C_max>255</motor_C_max>
  <motor_C_value>128</motor_C_value>
  <nxt_port>USB</nxt_port>
  <remember_as_default>TRUE</remember_as_default>
  <sensor_1_map>UltraSANIC_dist</sensor_1_map>
  <sensor_1_type>5</sensor_1_type>
  <servo_1_map/>
  <servo_1_max>2500</servo_1_max>
  <servo_1_min>500</servo_1_min>
  <servo_1_value>1500</servo_1_value>
  <servo_2_map/>
  <servo_2_max>2500</servo_2_max>
  <servo_2_min>500</servo_2_min>
  <servo_2_value>1500</servo_2_value>
  <servo_3_map/>
  <servo_3_max>2500</servo_3_max>
  <servo_3_min>500</servo_3_min>
  <servo_3_value>1500</servo_3_value>
  <servo_4_map/>
  <servo_4_max>2500</servo_4_max>
  <servo_4_min>500</servo_4_min>
  <servo_4_value>1500</servo_4_value>
  <servo_5_map/>
  <servo_5_max>2500</servo_5_max>
  <servo_5_min>500</servo_5_min>
  <servo_5_value>1500</servo_5_value>
  <servo_6_map/>
  <servo_6_max>2500</servo_6_max>
  <servo_6_min>500</servo_6_min>
  <servo_6_value>1500</servo_6_value>
  <servo_7_map/>
  <servo_7_max>2500</servo_7_max>
  <servo_7_min>500</servo_7_min>
  <servo_7_value>1500</servo_7_value>
  <servo_8_map/>
  <servo_8_max>2500</servo_8_max>
  <servo_8_min>500</servo_8_min>
  <servo_8_value>1500</servo_8_value>
</Lego_NXT>
<function>
<function_name>Find_Robot</function_name>
<function_always_run>0</function_always_run>
<Mean>
  <filter_size>3</filter_size>
</Mean>
<RGB_Filter>
  <channel>2</channel>
  <hue_value>33</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>144</min_value>
</RGB_Filter>
<Erode disabled>
  <count>3</count>
  <erode_borders>FALSE</erode_borders>
  <kernal_shape>4</kernal_shape>
</Erode>
<Flicker>
  <num_frames>10</num_frames>
</Flicker>
<Colorize>
  <rgb>#00FF00</rgb>
</Colorize>
<Fill>
  <check_border>FALSE</check_border>
  <fill_with_average_color>TRUE</fill_with_average_color>
  <four_pixel_connectivity>FALSE</four_pixel_connectivity>
  <size>20</size>
</Fill>
<Blob_Filter>
  <create_blob_array_variable>TRUE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>73</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
      </filter>
      <filter:2>
        <count_threshold>1</count_threshold>
        <create_array>1</create_array>
        <filter_id>21</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
      </filter:2>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Geometric_Statistics>
  <basic_statistics>FALSE</basic_statistics>
</Geometric_Statistics>
<Set_Variable>
  <set_1_array>FALSE</set_1_array>
  <set_1_once>FALSE</set_1_once>
  <set_2_array>FALSE</set_2_array>
  <set_2_once>FALSE</set_2_once>
  <set_3_array>FALSE</set_3_array>
  <set_3_once>FALSE</set_3_once>
  <set_4_array>FALSE</set_4_array>
  <set_4_once>FALSE</set_4_once>
  <value_1>[ANGLE]</value_1>
  <value_2>[blobs:0]</value_2>
  <value_3>[blobs:1]</value_3>
  <variable_1>robot_orientation</variable_1>
  <variable_2>robot_x</variable_2>
  <variable_3>robot_y</variable_3>
</Set_Variable>
<Marker>
  <include_graphics>0</include_graphics>
  <name>reset to source</name>
  <revert_to>Source</revert_to>
</Marker>
</function>
<function>
<function_name>Find_Trash</function_name>
<function_always_run>0</function_always_run>
<Mean>
  <filter_size>3</filter_size>
</Mean>
<RGB_Filter>
  <channel>1</channel>
  <hue_value>57</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>101</min_value>
</RGB_Filter>
<Colorize>
  <rgb>#FF0000</rgb>
</Colorize>
<Erode disabled>
  <count>4</count>
  <erode_borders>FALSE</erode_borders>
  <kernal_shape>4</kernal_shape>
</Erode>
<Flicker disabled>
  <num_frames>10</num_frames>
</Flicker>
<Blob_Filter>
  <create_blob_array_variable>TRUE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>31</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
      </filter>
      <filter:2>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>8</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <minimum_size>30</minimum_size>
        <weight_threshold>0</weight_threshold>
      </filter:2>
      <filter:3>
        <count_threshold>1</count_threshold>
        <create_array>0</create_array>
        <filter_id>17</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <object_coord>cdestination_x,destination_y</object_coord>
        <weight_threshold>0</weight_threshold>
      </filter:3>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Dilate>
  <avoid_connection>FALSE</avoid_connection>
  <count>3</count>
  <dilate_borders>FALSE</dilate_borders>
  <kernal_shape>4</kernal_shape>
</Dilate>
<Set_Variable>
  <set_1_array>FALSE</set_1_array>
  <set_1_once>TRUE</set_1_once>
  <set_2_array>FALSE</set_2_array>
  <set_2_once>FALSE</set_2_once>
  <set_3_array>FALSE</set_3_array>
  <set_3_once>FALSE</set_3_once>
  <set_4_array>FALSE</set_4_array>
  <set_4_once>FALSE</set_4_once>
  <value_1>[blobs:0]</value_1>
  <value_2>[blobs:1]</value_2>
  <variable_1>trash_x</variable_1>
  <variable_2>trash_y</variable_2>
</Set_Variable>
<Set_Variable>
  <set_1_array>FALSE</set_1_array>
  <set_1_once>FALSE</set_1_once>
  <set_2_array>FALSE</set_2_array>
  <set_2_once>FALSE</set_2_once>
  <set_3_array>FALSE</set_3_array>
  <set_3_once>FALSE</set_3_once>
  <set_4_array>FALSE</set_4_array>
  <set_4_once>FALSE</set_4_once>
  <value_1>[BLOBS]</value_1>
  <variable_1>waypoints</variable_1>
</Set_Variable>
<Colorize>
  <rgb>#FFFFFF</rgb>
</Colorize>
<Math>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>1</function>
  <image1>Current</image1>
  <image2>Source</image2>
</Math>
<Marker>
  <include_graphics>0</include_graphics>
  <name>source_WithOtherTrash</name>
  <revert_to>Current</revert_to>
</Marker>
<Call>
  <name>Mark_OtherTrash</name>
  <use_image>source_WithOtherTrash</use_image>
</Call>
</function>
<function>
<function_name>Find_Recepticle</function_name>
<function_always_run>0</function_always_run>
<RGB_Filter>
  <channel>32</channel>
  <hue_value>10</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>88</min_value>
</RGB_Filter>
<Erode disabled>
  <count>2</count>
  <erode_borders>FALSE</erode_borders>
  <kernal_shape>4</kernal_shape>
</Erode>
<Flicker disabled>
  <num_frames>10</num_frames>
</Flicker>
<Colorize>
  <rgb>#FF0000</rgb>
</Colorize>
<Blob_Filter>
  <create_blob_array_variable>TRUE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>1</count_threshold>
        <create_array>0</create_array>
        <filter_id>21</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Set_Variable>
  <set_1_array>FALSE</set_1_array>
  <set_1_once>FALSE</set_1_once>
  <set_2_array>FALSE</set_2_array>
  <set_2_once>FALSE</set_2_once>
  <set_3_array>FALSE</set_3_array>
  <set_3_once>FALSE</set_3_once>
  <set_4_array>FALSE</set_4_array>
  <set_4_once>FALSE</set_4_once>
  <value_1>[blobs:0]</value_1>
  <value_2>[blobs:1]</value_2>
  <variable_1>destination_x</variable_1>
  <variable_2>destination_y</variable_2>
</Set_Variable>
<Marker>
  <include_graphics>0</include_graphics>
  <name/>
  <revert_to>Source</revert_to>
</Marker>
</function>
<function>
<function_name>Mark_Obstacles</function_name>
<function_always_run>0</function_always_run>
<Marker>
  <include_graphics>0</include_graphics>
  <name>blahblah</name>
  <revert_to>source_OtherTrashMarked</revert_to>
</Marker>
<RGB_Filter>
  <channel>4</channel>
  <hue_value>100</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>150</min_value>
</RGB_Filter>
<Flicker disabled>
  <num_frames>10</num_frames>
  <threshold>3</threshold>
</Flicker>
<Colorize>
  <rgb>#0000FF</rgb>
</Colorize>
<Blob_Filter>
  <create_blob_array_variable>TRUE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>8</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <minimum_size>40</minimum_size>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2>
      <filter>
        <count_threshold>1</count_threshold>
        <create_array>0</create_array>
        <filter_id>10</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab:2>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>TRUE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Dilate>
  <avoid_connection>TRUE</avoid_connection>
  <count>36</count>
  <dilate_borders>FALSE</dilate_borders>
  <kernal_shape>4</kernal_shape>
</Dilate>
<Marker>
  <include_graphics>0</include_graphics>
  <name>Source_WithObstacles</name>
  <revert_to>Current</revert_to>
</Marker>
<RGB_Filter>
  <channel>4</channel>
  <hue_value>130</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>100</min_value>
  <result_type>4</result_type>
</RGB_Filter>
<Math>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>4</function>
  <image1>Current</image1>
  <image2>Source</image2>
  <image_1_channel>2</image_1_channel>
  <image_2_channel>2</image_2_channel>
</Math>
</function>
<function>
<function_name>Mark_OtherTrash</function_name>
<function_always_run>0</function_always_run>
<Marker>
  <include_graphics>0</include_graphics>
  <name>reset_MarkedTarget</name>
  <revert_to>source_WithOtherTrash</revert_to>
</Marker>
<RGB_Filter>
  <channel>1</channel>
  <hue_value>50</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>100</min_value>
</RGB_Filter>
<Colorize>
  <rgb>#0000FF</rgb>
</Colorize>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>0</count_threshold>
        <create_array>0</create_array>
        <filter_id>8</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <minimum_size>40</minimum_size>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Marker>
  <include_graphics>0</include_graphics>
  <name>reset_MarkedOtherTrash</name>
  <revert_to>Current</revert_to>
</Marker>
<Math disabled>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>15</function>
  <image1>reset_MarkedTarget</image1>
  <image2>Current</image2>
</Math>
<Math>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>15</function>
  <image1>source_WithOtherTrash</image1>
  <image2>Current</image2>
</Math>
<RGB_Filter>
  <channel>32</channel>
  <hue_value>0</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>90</min_value>
</RGB_Filter>
<Dilate>
  <avoid_connection>FALSE</avoid_connection>
  <count>11</count>
  <dilate_borders>FALSE</dilate_borders>
  <kernal_shape>4</kernal_shape>
</Dilate>
<Colorize>
  <rgb>#FF0000</rgb>
</Colorize>
<Blob_Filter>
  <create_blob_array_variable>FALSE</create_blob_array_variable>
  <filters>
    <tab>
      <filter>
        <count_threshold>1</count_threshold>
        <create_array>0</create_array>
        <filter_id>21</filter_id>
        <invert_count>0</invert_count>
        <invert_threshold>0</invert_threshold>
        <weight_threshold>0</weight_threshold>
      </filter>
    </tab>
    <tab:2/>
    <tab:3/>
    <tab:4/>
    <tab:5/>
    <tab:6/>
  </filters>
  <largest_is_background>FALSE</largest_is_background>
  <show_weights>FALSE</show_weights>
  <sort_array_on_x>FALSE</sort_array_on_x>
  <sort_array_on_y>FALSE</sort_array_on_y>
</Blob_Filter>
<Dilate>
  <avoid_connection>FALSE</avoid_connection>
  <count>14</count>
  <dilate_borders>FALSE</dilate_borders>
  <kernal_shape>4</kernal_shape>
</Dilate>
<Math>
  <all_channels>TRUE</all_channels>
  <bias>0</bias>
  <divisor>1</divisor>
  <function>15</function>
  <image1>reset_MarkedOtherTrash</image1>
  <image2>Current</image2>
</Math>
<RGB_Filter>
  <channel>4</channel>
  <hue_value>50</hue_value>
  <hysteresis>0</hysteresis>
  <min_value>100</min_value>
</RGB_Filter>
<Marker>
  <include_graphics>0</include_graphics>
  <name>source_OtherTrashMarked</name>
  <revert_to>Current</revert_to>
</Marker>
</function>
